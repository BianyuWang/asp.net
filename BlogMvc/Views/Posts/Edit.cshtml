@model BlogMvc.Models.Post

@{
    ViewBag.Title = "Edit";
}

<h2>Edit your Post</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Content, new { rows = "20", style = "resize:none;width:400px;", placeholder = Html.DisplayNameFor(model => model.Content), @class = "form-control input-lg textarea-editor" })

            </div>


</div>

<div class="form-group">
    @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DisplayFor(model => model.CreatedOn)
        @Html.HiddenFor(model => model.CreatedOn)
        @Html.ValidationMessageFor(model => model.CreatedOn)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.UpdatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DisplayFor(model => model.UpdatedOn)
        @Html.HiddenFor(model => model.UpdatedOn, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.UpdatedOn, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.PostedOn, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DisplayFor(model => model.PostedOn)
        @Html.HiddenFor(model => model.PostedOn, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.PostedOn, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    <div class="col-md-10">
        @Html.HiddenFor(model => model.UserFullName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.UserFullName, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Save" class="btn btn-default" />

        @Html.ActionLink("Delete this post", "Delete", new { id = Model.Id })
        <!-- <input type="button" value="Delete"  onclick="location.href=' Url.Action("Delete", "Post", new { id = Model.Id })'" />-->
    </div>
</div>
</div>
}

<div>
    @Html.ActionLink("Back to Home", "Index", "Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.2/summernote.js"></script>
    @Scripts.Render("~/bundles/Script-custom-editor")

    <link href="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.2/summernote.css" rel="stylesheet">

}
